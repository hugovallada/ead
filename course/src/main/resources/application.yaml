server:
  port: 8082
  servlet:
    context-path: '/ead-course/'

spring:
  application:
    name: ead-course-service
  config:
    import: 'optional:configserver:' # se config server estiver indisponível, ele considera as outras configurações, se não, usa as do config
    cloud:
      config:
        discovery:
          serviceId: ead-config-server
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/ead-course}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creation: true
    properties:
      hibernate:
        show_sql: true
  rabbitmq:
    addresses: amqps://icvkklsl:odFeO-J_2MhxSPb1suiIE0o3bBpFt8Qm@jackal.rmq.cloudamqp.com/icvkklsl
ead:
  api:
    url:
      auth-user: 'http://ead-authuser-service'
  broker:
    exchange:
      userEventExchange: ead.userevent
      notificationCommandExchange: ead.notificationcommand
    queue:
      userEventQueue:
        name: ead.userevent.ms.course
    key:
      notificationCommandKey: ms.notification

eureka:
  client:
    serviceUrl:
      defaultZone: 'http://localhost:8761/eureka'
  instance:
    hostname: localhost